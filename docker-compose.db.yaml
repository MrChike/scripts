version: "3.8"

# run the following commands
# `docker network create shared_bridge` → → → enables stable service discovery (e.g., redis://root:root@redis_cache:6379/0) across multiple Docker Compose files without relying on changing container IPs.
#  docker-compose -f path/to/compose-file.yaml up

services:

  postgres:
    image: postgres:16.9-bullseye
    container_name: compose_postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
    ports:
    - "5432:5432" 

  timescaledb:
    image: timescale/timescaledb-ha:pg17
    container_name: compose_timescaledb
    depends_on:
    - "postgres"
    environment:
      POSTGRES_PASSWORD: root

  graphql-engine:
    # http://localhost:8082/console/
    image: hasura/graphql-engine:v1.0.0-beta.6
    container_name: compose_graphql-engine
    depends_on:
    - "postgres"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://root:root@postgres:5432/root
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: root
    ports:
    - "8082:8080"

  pgadmin4:
    # http://localhost:8083/login Login details - Email Address:root@mailinator.com, Password: root 
    # docker container inspect compose_postgres | grep IPAddress      ----> 172.21.0.X
    # create db server: Connection settings: db_host=172.21.0.X, db_port=5432, db_name=root, db_user=root, db_password=root
    image: dpage/pgadmin4:9.4.0
    container_name: compose_pgadmin4
    depends_on:
    - "postgres"
    environment:
      PGADMIN_DEFAULT_EMAIL: root@mailinator.com
      PGADMIN_DEFAULT_PASSWORD: root
      GLOBALLY_DELIVERABLE: "True"
    ports:
      - 8083:80

  mongo:
    image: mongo:7.0.5
    container_name: compose_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
    - "27017:27017"

  mongo-express:
    # http://localhost:8081/
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: compose_mongo-express
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
      ME_CONFIG_BASICAUTH: "false"
    ports:
      - 8081:8081

  redis_cache:
    image: redis:8.0.1-bookworm
    container_name: compose_redis_cache
    command: ["redis-server", "--requirepass", "root"]
    restart: always
    ports:
      - "6379:6379"

  redisinsight:
    image: redis/redisinsight:2.70
    container_name: compose_redisinsight
    ports:
      - "5540:5540"
